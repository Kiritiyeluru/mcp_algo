name: Documentation Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/documentation.yml'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-and-document:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r docs/requirements.txt
        
    - name: Run Tests
      run: |
        pytest tests/documentation/ --cov=documentation --cov-report=xml -v
        
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16
        
    - name: Install Mermaid CLI
      run: npm install -g @mermaid-js/mermaid-cli
        
    - name: Generate API Documentation
      run: |
        python docs/scripts/generate_api_docs.py
        
    - name: Generate Dependency Graphs
      run: |
        python docs/scripts/generate_dependency_graphs.py
        mmdc -i docs/graphs/dependencies.mmd -o docs/graphs/dependencies.svg
        
    - name: Build MkDocs
      run: |
        mkdocs build --strict
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site

    - name: Store Documentation Context
      run: |
        python docs/scripts/store_doc_context.py

    - name: Error Analysis
      if: failure()
      run: |
        python docs/scripts/analyze_doc_errors.py
